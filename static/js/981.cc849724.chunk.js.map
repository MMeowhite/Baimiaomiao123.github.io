{"version":3,"file":"static/js/981.cc849724.chunk.js","mappings":"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","sources":["pages/Main/experienceSection/index.js","pages/Main/experienceSection/timeline.js","webpack://website/./src/pages/Main/experienceSection/timeline.css?2703"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport useConfig from \"../../../utils/useConfig\"\nimport { useTheme } from \"../../../components/themeProvider\";\nimport Timeline from \"./timeline\"; // 引入时间轴组件\nimport AOS from 'aos'\nimport {useMediaQuery} from \"react-responsive\";\n\n\nconst ExperienceSection = () => {\n    const { configValue: experienceObj, error, loading } = useConfig(\"pages.home.experienceSection\")\n    const isSmallScreen = useMediaQuery({ maxWidth: 768 })\n    const [educationData, setEducationData] = useState(null);\n    const { isDarkMode } = useTheme();\n\n    useEffect(()=>{\n        AOS.init({ duration: 1000, once: true }); // 设置动画持续时间和是否只触发一次\n    },[])\n\n    useEffect(() => {\n        if (experienceObj) {\n\n            setEducationData(experienceObj.edu)\n        }\n    }, [experienceObj])\n\n    const cardStyles = {\n        background: \"inherit\",\n        color: isDarkMode ? '#ffffff' : '#000000',\n        width: '100%',\n        height: \"auto\",\n    };\n\n    if (error) {\n        return (<div>Error message: {error}</div>)\n    }\n\n    if (loading) {\n        return (<div>loading....</div>)\n    }\n\n    if (!educationData) {\n        return (<div>Education data isn't exist!</div>)\n    }\n\n    return (\n        <div\n            id=\"education\"\n            className=\"d-flex flex-column justify-content-center align-items-center\"\n            style={{\n                width: \"100vw\",\n                height: \"auto\",\n                gap: \"40px\"\n            }}\n        >\n            <div id=\"edu-card\"\n                 className={`d-flex flex-column ${isSmallScreen ? \"\" : \"flex-md-row\"} align-items-center`}\n                 style={{ padding: isSmallScreen ? \"0 20px\" : \"0 0 0 100px\", width: \"100vw\" }}\n            >\n                {/* Experience Title (放在 Education part 之前) */}\n                <div className=\"d-flex justify-content-center align-items-center\"\n                     style={{ flex: 1, order: isSmallScreen ? \"-1\" : \"1\" }}\n                     data-aos=\"fade-left\"\n                >\n        <span style={{ fontWeight: \"800\", fontSize: isSmallScreen ? \"40px\" : \"60px\", textAlign: 'center' }}>\n            {experienceObj.title ? experienceObj.title : \"Education\"}\n        </span>\n                </div>\n\n                {/* Education part */}\n                <div className=\"d-flex flex-column justify-content-between\" style={{ flex: 1, gap: \"40px\", width: \"100%\", padding: \"0 60px\" }}>\n                    {educationData.map((item, index) => (\n                        <div key={index}>\n                            <div className=\"d-flex flex-column\" style={{ ...cardStyles, gap: \"10px\" }} data-aos=\"fade-right\">\n\n                                {/* 学校部分 */}\n                                <span className=\"d-flex align-items-center flex-row\"\n                                      style={{\n                                          fontSize: isSmallScreen ? \"30px\" : \"40px\",\n                                          lineHeight: \"3rem\", color: isDarkMode ? \"#fff\" : \"#333\",\n                                          whiteSpace: \"wrap\", maxWidth: \"100%\"}}>\n\n                        <img src={item.logo ? item.logo : null}\n                             style={{ height: \"80px\", width: \"80px\", borderRadius: \"50%\", marginRight: \"10px\" }} />\n\n                        <a href={item.url ? item.url : \"\"}\n                           style={{ fontWeight: \"600\", textDecoration: \"none\", color: isDarkMode ? \"#fff\" : \"#333\", maxWidth: \"100%\" }}>\n                            {item.university}\n                        </a>\n                    </span>\n\n                                {/* 学位部分 */}\n                                <span style={{ fontSize: isSmallScreen ? \"22px\" : \"26px\", color: isDarkMode ? \"#fff\" : \"#333\"}}>{item.degree}</span>\n\n                                {/* 时间以及GPA */}\n                                <span style={{ fontSize: \"20px\", color: isDarkMode ? \"#6b7280\" : \"#9ca3af\" }}>\n                        <strong>Time:</strong> {item.period} &nbsp;&nbsp;&nbsp;&nbsp; <strong>GPA:</strong> {item.gpa}\n                    </span>\n\n                                {/* 学位课程 */}\n                                <span style={{ fontSize: \"20px\", color: isDarkMode ? \"#6b7280\" : \"#9ca3af\" }}><strong>Degree Courses:</strong> {item.course}</span>\n\n                                {/* 附加课程 */}\n                                <span style={{ fontSize: \"20px\", color: isDarkMode ? \"#6b7280\" : \"#9ca3af\" }}><strong>Additional Courses:</strong> {item.additionalCourse}</span>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n\n            {/* Timeline Section */}\n            <div id=\"experience\" className=\"d-flex flex-column align-items-center\" style={{ width: \"100%\" }}>\n                <h1 style={{ fontWeight: \"800\", fontSize: isSmallScreen?  \"40px\" : \"60px\", textAlign: 'center' }}>Experience</h1>\n                <Timeline />\n            </div>\n        </div>\n    )\n}\n\nexport default ExperienceSection;\n","import React, { useEffect, useRef } from \"react\";\nimport \"./timeline.css\";\nimport useConfig from \"../../../utils/useConfig\";\nimport {useTheme} from \"../../../components/themeProvider\";\n\nconst Timeline = () => {\n    const { configValue: timelineData } = useConfig(\"pages.home.experienceSection.timeline\");\n    const timelineRef = useRef(null);\n    const { isDarkMode } = useTheme();\n\n    useEffect(() => {\n        if (!timelineData?.length) return; // 确保数据已加载\n\n        const items = timelineRef.current.querySelectorAll(\".timeline li\");\n\n        const isElementInViewport = (el) => {\n            const rect = el.getBoundingClientRect();\n            return (\n                rect.top >= 0 &&\n                rect.left >= 0 &&\n                rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n                rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n            );\n        };\n\n        const callbackFunc = () => {\n            items.forEach((item) => {\n                if (isElementInViewport(item)) {\n                    item.classList.add(\"in-view\");\n                }\n            });\n        };\n\n        // 立即执行一次，确保初始状态正确\n        callbackFunc();\n\n        window.addEventListener(\"scroll\", callbackFunc);\n        window.addEventListener(\"resize\", callbackFunc);\n\n        return () => {\n            window.removeEventListener(\"scroll\", callbackFunc);\n            window.removeEventListener(\"resize\", callbackFunc);\n        };\n    }, [timelineData]); // 依赖 `timelineData`，确保数据更新后执行\n\n    return (\n        <section className={`timeline ${isDarkMode ? \"dark\" : \"light\"}`} ref={timelineRef}>\n\n            <ul>\n                {timelineData?.map((item, index) => (\n                    <li key={index} style={{backgroundColor: isDarkMode ? \"#fff\" : \"#000\"}}>\n                        <div style={{\n                            borderWidth: \"2px\",\n                            borderStyle: \"solid\", // 指定边框样式\n                            borderColor: isDarkMode ? \"#fff\" : \"#000\",\n                            borderRadius: '10px', // 可选圆角\n                            boxShadow: isDarkMode\n                                ? '0 8px 12px rgba(255, 255, 255, 0.5)' // 深色模式下的阴影\n                                : '0 8px 12px rgba(0, 0, 0, 0.5)', // 浅色模式下的阴影\n                        }}\n                        >\n                            <time>{item.year}</time>\n                            {item.content}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n};\n\nexport default Timeline;","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["ExperienceSection","configValue","experienceObj","error","loading","useConfig","isSmallScreen","useMediaQuery","maxWidth","educationData","setEducationData","useState","isDarkMode","useTheme","useEffect","AOS","duration","once","edu","cardStyles","background","color","width","height","_jsxs","children","_jsx","id","className","style","gap","padding","flex","order","fontWeight","fontSize","textAlign","title","map","item","index","lineHeight","whiteSpace","src","logo","borderRadius","marginRight","href","url","textDecoration","university","degree","period","gpa","course","additionalCourse","Timeline","timelineData","timelineRef","useRef","length","items","current","querySelectorAll","callbackFunc","forEach","el","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","isElementInViewport","classList","add","addEventListener","removeEventListener","ref","backgroundColor","borderWidth","borderStyle","borderColor","boxShadow","year","content"],"sourceRoot":""}