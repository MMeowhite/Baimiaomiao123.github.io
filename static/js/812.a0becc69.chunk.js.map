{"version":3,"file":"static/js/812.a0becc69.chunk.js","mappings":"qKAGA,MAmDA,EAnDgBA,KACZ,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GAuBvC,OACIK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,YACIC,MAAOV,EACPW,SA1BcC,IACtBX,EAAQW,EAAEC,OAAOH,MAAM,EA0BfI,YAAY,iCACZC,KAAK,KACLC,KAAK,QAETP,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQQ,QA5BMC,UAClB,GAAKlB,EAAKmB,OAAV,CAEAb,GAAW,GACX,IACI,MAAMc,QAAiBC,EAAAA,EAAMC,KAAK,qCAAsC,CACpEtB,KAAMA,IAEVI,EAAUgB,EAASG,KAAKpB,OAC5B,CAAE,MAAOqB,GACLC,QAAQD,MAAM,sBAAuBA,GACrCpB,EAAU,qBACd,CAAC,QACGE,GAAW,EACf,CAbwB,CAaxB,EAcoCoB,SAAUrB,EAAQG,SAC7CH,EAAU,aAAe,aAG7BF,IACGI,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,OAAAD,SAAML,SAGZ,C","sources":["utils/runPythonCode.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst RunCode = () => {\n    const [code, setCode] = useState(\"\");\n    const [result, setResult] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const handleCodeChange = (e) => {\n        setCode(e.target.value);\n    };\n\n    const handleRunCode = async () => {\n        if (!code.trim()) return;\n\n        setLoading(true);\n        try {\n            const response = await axios.post(\"http://<Mac-mini-IP>:5000/run_code\", {\n                code: code,\n            });\n            setResult(response.data.result);\n        } catch (error) {\n            console.error(\"Error running code:\", error);\n            setResult(\"Error running code\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Run Python Code</h1>\n            <textarea\n                value={code}\n                onChange={handleCodeChange}\n                placeholder=\"Write your Python code here...\"\n                rows=\"10\"\n                cols=\"50\"\n            />\n            <br />\n            <button onClick={handleRunCode} disabled={loading}>\n                {loading ? \"Running...\" : \"Run Code\"}\n            </button>\n\n            {result && (\n                <div>\n                    <h3>Output:</h3>\n                    <pre>{result}</pre>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default RunCode;\n"],"names":["RunCode","code","setCode","useState","result","setResult","loading","setLoading","_jsxs","children","_jsx","value","onChange","e","target","placeholder","rows","cols","onClick","async","trim","response","axios","post","data","error","console","disabled"],"sourceRoot":""}